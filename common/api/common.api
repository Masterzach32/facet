public final class io/facet/common/CoroutinesKt {
	public static final fun retry (IJLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/facet/common/FlowKt {
	public static final fun distinct (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun distinctBy (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
	public static final fun mergeWith (Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
}

public final class io/facet/common/FluxKt {
	public static final fun await (Lreactor/core/publisher/Flux;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun awaitVoid (Lreactor/core/publisher/Flux;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class io/facet/common/GatewayInteractionResponse : discord4j/rest/interaction/InteractionResponse {
	public abstract fun getClient ()Ldiscord4j/core/GatewayDiscordClient;
	public abstract fun sendFollowupMessage (Ldiscord4j/core/spec/WebhookExecuteSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun sendFollowupMessage (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun sendFollowupMessageEphemeral (Ldiscord4j/core/spec/WebhookExecuteSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/facet/common/GatewayInteractionResponse$DefaultImpls {
	public static synthetic fun sendFollowupMessage$default (Lio/facet/common/GatewayInteractionResponse;Ljava/lang/String;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class io/facet/common/GatewayInteractionResponseKt {
	public static final fun getGatewayInteractionResponse (Ldiscord4j/core/event/domain/interaction/DeferrableInteractionEvent;)Lio/facet/common/GatewayInteractionResponse;
	public static final fun sendFollowupEmbed (Lio/facet/common/GatewayInteractionResponse;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sendFollowupEmbedEphemeral (Lio/facet/common/GatewayInteractionResponse;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sendFollowupMessage (Lio/facet/common/GatewayInteractionResponse;Ldiscord4j/core/spec/EmbedCreateSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sendFollowupMessage (Lio/facet/common/GatewayInteractionResponse;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sendFollowupMessageEphemeral (Lio/facet/common/GatewayInteractionResponse;Ldiscord4j/core/spec/EmbedCreateSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sendFollowupMessageEphemeral (Lio/facet/common/GatewayInteractionResponse;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/facet/common/GuildKt {
	public static final fun getConnectedVoiceChannel (Ldiscord4j/core/object/entity/Guild;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun getOurVoiceState (Ldiscord4j/core/object/entity/Guild;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun getVoiceChannelByName (Ldiscord4j/core/object/entity/Guild;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/facet/common/InteractionResponseKt {
	public static final fun sendFollowupMessage (Ldiscord4j/rest/interaction/InteractionResponse;Ldiscord4j/core/spec/EmbedCreateSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sendFollowupMessage (Ldiscord4j/rest/interaction/InteractionResponse;Ldiscord4j/core/spec/WebhookExecuteSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sendFollowupMessage (Ldiscord4j/rest/interaction/InteractionResponse;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sendFollowupMessage (Ldiscord4j/rest/interaction/InteractionResponse;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/facet/common/MemberKt {
	public static final fun getConnectedVoiceChannel (Ldiscord4j/core/object/entity/Member;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/facet/common/MessageChannelKt {
	public static final fun sendEmbed (Ldiscord4j/core/object/entity/channel/MessageChannel;Ldiscord4j/core/spec/EmbedCreateSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sendEmbed (Ldiscord4j/core/object/entity/channel/MessageChannel;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sendMessage (Ldiscord4j/core/object/entity/channel/MessageChannel;Ldiscord4j/core/spec/MessageCreateSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sendMessage (Ldiscord4j/core/object/entity/channel/MessageChannel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sendMessage (Ldiscord4j/core/object/entity/channel/MessageChannel;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sendMessage (Ldiscord4j/core/object/entity/channel/MessageChannel;[Ldiscord4j/core/spec/EmbedCreateSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/facet/common/MessageKt {
	public static final fun getAllMemberMentions (Ldiscord4j/core/object/entity/Message;)Lkotlinx/coroutines/flow/Flow;
	public static final fun getAllMemberMentions (Ldiscord4j/core/object/entity/Message;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun getAllUserMentions (Ldiscord4j/core/object/entity/Message;)Lkotlinx/coroutines/flow/Flow;
	public static final fun getAllUserMentions (Ldiscord4j/core/object/entity/Message;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun getButtonEvents (Ldiscord4j/core/object/entity/Message;)Lkotlinx/coroutines/flow/Flow;
	public static final fun getComponentEvents (Ldiscord4j/core/object/entity/Message;)Lkotlinx/coroutines/flow/Flow;
	public static final fun getOurReactions (Ldiscord4j/core/object/entity/Message;)Ljava/util/Set;
	public static final fun getReactionAddEvents (Ldiscord4j/core/object/entity/Message;)Lkotlinx/coroutines/flow/Flow;
	public static final fun getSelectMenuEvents (Ldiscord4j/core/object/entity/Message;)Lkotlinx/coroutines/flow/Flow;
	public static final fun reply (Ldiscord4j/core/object/entity/Message;Ldiscord4j/core/spec/EmbedCreateSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun reply (Ldiscord4j/core/object/entity/Message;Ldiscord4j/core/spec/MessageCreateSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun reply (Ldiscord4j/core/object/entity/Message;Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun reply (Ldiscord4j/core/object/entity/Message;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun reply$default (Ldiscord4j/core/object/entity/Message;Ljava/lang/String;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun replyEmbed (Ldiscord4j/core/object/entity/Message;ZLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun replyEmbed$default (Ldiscord4j/core/object/entity/Message;ZLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class io/facet/common/MonoKt {
	public static final fun await (Lreactor/core/publisher/Mono;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun awaitComplete (Lreactor/core/publisher/Mono;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun awaitNullable (Lreactor/core/publisher/Mono;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun awaitVoid (Lreactor/core/publisher/Mono;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun toMonoOrEmpty (Ljava/lang/Object;)Lreactor/core/publisher/Mono;
}

public final class io/facet/common/OptionalKt {
	public static final fun getValue (Ljava/util/Optional;)Ljava/lang/Object;
	public static final fun grab (Ljava/util/Optional;)Ljava/lang/Object;
	public static final fun toOptional (Ljava/lang/Object;)Ljava/util/Optional;
	public static final fun unwrap (Ljava/util/Optional;)Ljava/lang/Object;
}

public final class io/facet/common/PossibleKt {
	public static final fun unwrap (Ldiscord4j/discordjson/possible/Possible;)Ljava/lang/Object;
}

public final class io/facet/common/RoleKt {
	public static final fun getMembers (Ldiscord4j/core/object/entity/Role;)Lkotlinx/coroutines/flow/Flow;
	public static final fun getMembers (Ldiscord4j/core/object/entity/Role;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/facet/common/SnowflakeKt {
	public static final fun asULong (Ldiscord4j/common/util/Snowflake;)J
	public static final fun toSnowflake (J)Ldiscord4j/common/util/Snowflake;
	public static final fun toSnowflake (Ldiscord4j/discordjson/Id;)Ldiscord4j/common/util/Snowflake;
	public static final fun toSnowflake (Ljava/lang/String;)Ldiscord4j/common/util/Snowflake;
}

public final class io/facet/common/UnicodeKt {
	public static final fun getUnicode (I)Ljava/lang/String;
	public static final fun utf16 (I)Ljava/lang/String;
}

public final class io/facet/common/VoiceChannelKt {
	public static final fun getConnectedMemberIds (Ldiscord4j/core/object/entity/channel/VoiceChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun getConnectedMembers (Ldiscord4j/core/object/entity/channel/VoiceChannel;)Lkotlinx/coroutines/flow/Flow;
	public static final fun getConnectedMembers (Ldiscord4j/core/object/entity/channel/VoiceChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/facet/common/dsl/AllowedMentionsBuilderDsl {
	public fun <init> (Ldiscord4j/rest/util/AllowedMentions$Builder;)V
	public final fun build ()Ldiscord4j/rest/util/AllowedMentions;
	public final fun getRepliedUser ()Z
	public final fun parseType ([Ldiscord4j/rest/util/AllowedMentions$Type;)V
	public final fun role ([Ldiscord4j/common/util/Snowflake;)V
	public final fun setRepliedUser (Z)V
	public final fun users ([Ldiscord4j/common/util/Snowflake;)V
}

public final class io/facet/common/dsl/EmbedBuilder : io/facet/common/dsl/SpecBuilder {
	public fun <init> ()V
	public final fun author (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun author (Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun author$default (Lio/facet/common/dsl/EmbedBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public fun build ()Ldiscord4j/core/spec/EmbedCreateSpec;
	public synthetic fun build ()Ldiscord4j/core/spec/Spec;
	public final fun color (Ldiscord4j/rest/util/Color;)V
	public final fun description (Ljava/lang/String;)V
	public final fun field (Ljava/lang/String;Ljava/lang/String;Z)V
	public final fun field (Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun field$default (Lio/facet/common/dsl/EmbedBuilder;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)V
	public final fun footer (Ljava/lang/String;Ljava/lang/String;)V
	public final fun footer (Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun footer$default (Lio/facet/common/dsl/EmbedBuilder;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public final fun getColor ()Ldiscord4j/rest/util/Color;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getImage ()Ljava/lang/String;
	public final fun getImageUrl ()Ljava/lang/String;
	public final fun getThumbnail ()Ljava/lang/String;
	public final fun getThumbnailUrl ()Ljava/lang/String;
	public final fun getTimestamp ()Ljava/time/Instant;
	public final fun getTitle ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public final fun image (Ljava/lang/String;)V
	public final fun setColor (Ldiscord4j/rest/util/Color;)V
	public final fun setDescription (Ljava/lang/String;)V
	public final fun setImage (Ljava/lang/String;)V
	public final fun setImageUrl (Ljava/lang/String;)V
	public final fun setThumbnail (Ljava/lang/String;)V
	public final fun setThumbnailUrl (Ljava/lang/String;)V
	public final fun setTimestamp (Ljava/time/Instant;)V
	public final fun setTitle (Ljava/lang/String;)V
	public final fun setUrl (Ljava/lang/String;)V
	public final fun thumbnail (Ljava/lang/String;)V
	public final fun timestamp (Ljava/time/Instant;)V
	public final fun title (Ljava/lang/String;)V
	public final fun url (Ljava/lang/String;)V
}

public final class io/facet/common/dsl/EmbedBuilder$EmbedAuthor {
	public field name Ljava/lang/String;
	public final fun getIconUrl ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public final fun iconUrl (Ljava/lang/String;)V
	public final fun name (Ljava/lang/String;)V
	public final fun setIconUrl (Ljava/lang/String;)V
	public final fun setName (Ljava/lang/String;)V
	public final fun setUrl (Ljava/lang/String;)V
	public final fun url (Ljava/lang/String;)V
}

public final class io/facet/common/dsl/EmbedBuilder$EmbedField {
	public field name Ljava/lang/String;
	public field value Ljava/lang/String;
	public final fun getInline ()Z
	public final fun getName ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public final fun inline (Z)V
	public static synthetic fun inline$default (Lio/facet/common/dsl/EmbedBuilder$EmbedField;ZILjava/lang/Object;)V
	public final fun name (Ljava/lang/String;)V
	public final fun setInline (Z)V
	public final fun setName (Ljava/lang/String;)V
	public final fun setValue (Ljava/lang/String;)V
	public final fun value (Ljava/lang/String;)V
}

public final class io/facet/common/dsl/EmbedBuilder$EmbedFooter {
	public field text Ljava/lang/String;
	public final fun getIconUrl ()Ljava/lang/String;
	public final fun getText ()Ljava/lang/String;
	public final fun iconUrl (Ljava/lang/String;)V
	public final fun setIconUrl (Ljava/lang/String;)V
	public final fun setText (Ljava/lang/String;)V
	public final fun text (Ljava/lang/String;)V
}

public final class io/facet/common/dsl/EmbedDslKt {
	public static final fun and (Ldiscord4j/core/spec/EmbedCreateSpec;Lkotlin/jvm/functions/Function1;)Ldiscord4j/core/spec/EmbedCreateSpec;
	public static final fun andThen (Ldiscord4j/core/spec/EmbedCreateSpec;Lkotlin/jvm/functions/Function1;)Ldiscord4j/core/spec/EmbedCreateSpec;
	public static final fun embed (Lkotlin/jvm/functions/Function1;)Ldiscord4j/core/spec/EmbedCreateSpec;
}

public final class io/facet/common/dsl/MessageBuilder : io/facet/common/dsl/SpecBuilder {
	public fun <init> ()V
	public final fun actionRow ([Ldiscord4j/core/object/component/ActionComponent;)V
	public final fun allowedMentions (Lkotlin/jvm/functions/Function1;)V
	public fun build ()Ldiscord4j/core/spec/MessageCreateSpec;
	public synthetic fun build ()Ldiscord4j/core/spec/Spec;
	public final fun component (Ldiscord4j/core/object/component/LayoutComponent;)V
	public final fun content (Ljava/lang/String;)V
	public final fun embed (Ldiscord4j/core/spec/EmbedCreateSpec;)V
	public final fun embed (Lkotlin/jvm/functions/Function1;)V
	public final fun file (Ljava/lang/String;Ljava/io/InputStream;Z)V
	public static synthetic fun file$default (Lio/facet/common/dsl/MessageBuilder;Ljava/lang/String;Ljava/io/InputStream;ZILjava/lang/Object;)V
	public final fun getContent ()Ljava/lang/String;
	public final fun getMessageReference ()Ldiscord4j/common/util/Snowflake;
	public final fun getNonce ()Ljava/lang/String;
	public final fun getTts ()Z
	public final fun messageReference (Ldiscord4j/common/util/Snowflake;)V
	public final fun nonce (Ljava/lang/String;)V
	public final fun setContent (Ljava/lang/String;)V
	public final fun setMessageReference (Ldiscord4j/common/util/Snowflake;)V
	public final fun setNonce (Ljava/lang/String;)V
	public final fun setTts (Z)V
	public final fun tts (Z)V
}

public final class io/facet/common/dsl/MessageDslKt {
	public static final fun and (Ldiscord4j/core/spec/MessageCreateSpec;Lkotlin/jvm/functions/Function1;)Ldiscord4j/core/spec/MessageCreateSpec;
	public static final fun andThen (Ldiscord4j/core/spec/MessageCreateSpec;Lkotlin/jvm/functions/Function1;)Ldiscord4j/core/spec/MessageCreateSpec;
	public static final fun message (Lkotlin/jvm/functions/Function1;)Ldiscord4j/core/spec/MessageCreateSpec;
}

public abstract interface class io/facet/common/dsl/SpecBuilder {
	public abstract fun build ()Ldiscord4j/core/spec/Spec;
}

public final class io/facet/common/dsl/WebhookDslKt {
	public static final fun and (Ldiscord4j/core/spec/WebhookExecuteSpec;Lkotlin/jvm/functions/Function1;)Ldiscord4j/core/spec/WebhookExecuteSpec;
	public static final fun webhookMessage (Lkotlin/jvm/functions/Function1;)Ldiscord4j/core/spec/WebhookExecuteSpec;
	public static final fun webhookMessageEmbed (Lkotlin/jvm/functions/Function1;)Ldiscord4j/core/spec/WebhookExecuteSpec;
}

public final class io/facet/common/dsl/WebhookMessageBuilder : io/facet/common/dsl/SpecBuilder {
	public fun <init> ()V
	public final fun actionRow ([Ldiscord4j/core/object/component/ActionComponent;)V
	public final fun allowedMentions (Lkotlin/jvm/functions/Function1;)V
	public final fun avatarUrl (Ljava/lang/String;)V
	public synthetic fun build ()Ldiscord4j/core/spec/Spec;
	public fun build ()Ldiscord4j/core/spec/WebhookExecuteSpec;
	public final fun component (Ldiscord4j/core/object/component/LayoutComponent;)V
	public final fun content (Ljava/lang/String;)V
	public final fun embed (Ldiscord4j/core/spec/EmbedCreateSpec;)V
	public final fun embed (Lkotlin/jvm/functions/Function1;)V
	public final fun file (Ljava/lang/String;Ljava/io/InputStream;Z)V
	public static synthetic fun file$default (Lio/facet/common/dsl/WebhookMessageBuilder;Ljava/lang/String;Ljava/io/InputStream;ZILjava/lang/Object;)V
	public final fun getAvatarUrl ()Ljava/lang/String;
	public final fun getContent ()Ljava/lang/String;
	public final fun getTts ()Z
	public final fun getUsername ()Ljava/lang/String;
	public final fun setAvatarUrl (Ljava/lang/String;)V
	public final fun setContent (Ljava/lang/String;)V
	public final fun setTts (Z)V
	public final fun setUsername (Ljava/lang/String;)V
	public final fun tts (Z)V
	public final fun username (Ljava/lang/String;)V
}

